<?xml version="1.0" encoding="UTF-8"?>
<<<<<<< HEAD
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="se.lexicon.order.component.test.integration.service.OrderComponentServiceIntegrationTest" time="0.991" tests="10" errors="8" skipped="0" failures="0">
=======
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="se.lexicon.order.component.test.integration.service.OrderComponentServiceIntegrationTest" time="1.491" tests="10" errors="0" skipped="0" failures="0">
>>>>>>> development
  <properties>
    <property name="os.detected.version" value="4.15"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="os.detected.release.like.linuxmint" value="true"/>
    <property name="sun.boot.library.path" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64"/>
<<<<<<< HEAD
    <property name="java.vm.version" value="25.212-b03"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="maven.multiModuleProjectDirectory" value="/home/meda/projects/order"/>
=======
    <property name="java.vm.version" value="25.222-b10"/>
    <property name="java.vm.vendor" value="Private Build"/>
    <property name="maven.multiModuleProjectDirectory" value="/home/rifr/GIT/lexicon-java-8/order"/>
>>>>>>> development
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="os.detected.version.minor" value="15"/>
    <property name="path.separator" value=":"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="user.country" value="US"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
<<<<<<< HEAD
    <property name="user.dir" value="/home/meda/projects/order"/>
    <property name="java.runtime.version" value="1.8.0_212-8u212-b03-0ubuntu1.18.04.1-b03"/>
=======
    <property name="user.dir" value="/home/rifr/GIT/lexicon-java-8/order"/>
    <property name="java.runtime.version" value="1.8.0_222-8u222-b10-1ubuntu1~18.04.1-b10"/>
>>>>>>> development
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
    <property name="java.endorsed.dirs" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="os.detected.release.version" value="19.1"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="os.detected.version.major" value="4"/>
    <property name="os.name" value="Linux"/>
    <property name="os.detected.classifier" value="linux-x86_64"/>
<<<<<<< HEAD
    <property name="classworlds.conf" value="/opt/apache-maven-3.6.1/bin/m2.conf"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib"/>
    <property name="os.detected.arch" value="x86_64"/>
    <property name="maven.conf" value="/opt/apache-maven-3.6.1/conf"/>
=======
    <property name="classworlds.conf" value="/usr/share/maven/bin/m2.conf"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib"/>
    <property name="os.detected.arch" value="x86_64"/>
    <property name="maven.conf" value="/usr/share/maven/conf"/>
>>>>>>> development
    <property name="java.class.version" value="52.0"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.detected.name" value="linux"/>
<<<<<<< HEAD
    <property name="os.version" value="4.15.0-54-generic"/>
    <property name="library.jansi.path" value="/opt/apache-maven-3.6.1/lib/jansi-native"/>
    <property name="user.home" value="/home/meda"/>
=======
    <property name="os.version" value="4.15.0-55-generic"/>
    <property name="library.jansi.path" value="/usr/share/maven/lib/jansi-native"/>
    <property name="user.home" value="/home/rifr"/>
>>>>>>> development
    <property name="user.timezone" value="Europe/Stockholm"/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="os.detected.release" value="linuxmint"/>
<<<<<<< HEAD
    <property name="user.name" value="meda"/>
    <property name="java.class.path" value="/opt/apache-maven-3.6.1/boot/plexus-classworlds-2.6.0.jar"/>
=======
    <property name="user.name" value="rifr"/>
    <property name="java.class.path" value="/usr/share/maven/boot/plexus-classworlds-2.x.jar"/>
>>>>>>> development
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.home" value="/usr/lib/jvm/java-8-openjdk-amd64/jre"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher clean install"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="user.language" value="en"/>
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="os.detected.release.like.ubuntu" value="true"/>
<<<<<<< HEAD
    <property name="java.version" value="1.8.0_212"/>
    <property name="java.ext.dirs" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext"/>
    <property name="securerandom.source" value="file:/dev/./urandom"/>
    <property name="sun.boot.class.path" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="maven.home" value="/opt/apache-maven-3.6.1"/>
=======
    <property name="java.version" value="1.8.0_222"/>
    <property name="java.ext.dirs" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext"/>
    <property name="securerandom.source" value="file:/dev/./urandom"/>
    <property name="sun.boot.class.path" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes"/>
    <property name="java.vendor" value="Private Build"/>
    <property name="maven.home" value="/usr/share/maven"/>
>>>>>>> development
    <property name="file.separator" value="/"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.desktop" value="gnome"/>
    <property name="sun.cpu.isalist" value=""/>
  </properties>
<<<<<<< HEAD
  <testcase name="testOrderComponentServiceExists" classname="se.lexicon.order.component.test.integration.service.OrderComponentServiceIntegrationTest" time="0.034"/>
  <testcase name="testOrderComponentServiceExists" classname="se.lexicon.order.component.test.integration.service.OrderComponentServiceIntegrationTest" time="0"/>
  <testcase name="testPlaceOrder" classname="se.lexicon.order.component.test.integration.service.OrderComponentServiceIntegrationTest" time="0.011">
    <error message="bean=se.lexicon.order.component.service.OrderComponentService-orderComponentService beanId=1 message=Ambiguous routing. No routing argument defined in method signature or on method arguments and method not annotated with @Broadcast. serviceMethod=public abstract void se.lexicon.order.component.service.OrderComponentService.MatchOrder(se.lexicon.order.component.entity.OrderEntity,se.lexicon.order.component.domain.OrderBook)" type="com.so4it.gs.rpc.exception.IllegalServiceMetadataException">com.so4it.gs.rpc.exception.IllegalServiceMetadataException: bean=se.lexicon.order.component.service.OrderComponentService-orderComponentService beanId=1 message=Ambiguous routing. No routing argument defined in method signature or on method arguments and method not annotated with @Broadcast. serviceMethod=public abstract void se.lexicon.order.component.service.OrderComponentService.MatchOrder(se.lexicon.order.component.entity.OrderEntity,se.lexicon.order.component.domain.OrderBook)
	at se.lexicon.order.component.test.integration.service.OrderComponentServiceIntegrationTest.testPlaceOrder(OrderComponentServiceIntegrationTest.java:45)
</error>
  </testcase>
  <testcase name="testPlaceOrder" classname="se.lexicon.order.component.test.integration.service.OrderComponentServiceIntegrationTest" time="0.001">
    <error message="bean=se.lexicon.order.component.service.OrderComponentService-orderComponentService beanId=1 message=Ambiguous routing. No routing argument defined in method signature or on method arguments and method not annotated with @Broadcast. serviceMethod=public abstract void se.lexicon.order.component.service.OrderComponentService.MatchOrder(se.lexicon.order.component.entity.OrderEntity,se.lexicon.order.component.domain.OrderBook)" type="com.so4it.gs.rpc.exception.IllegalServiceMetadataException">com.so4it.gs.rpc.exception.IllegalServiceMetadataException: bean=se.lexicon.order.component.service.OrderComponentService-orderComponentService beanId=1 message=Ambiguous routing. No routing argument defined in method signature or on method arguments and method not annotated with @Broadcast. serviceMethod=public abstract void se.lexicon.order.component.service.OrderComponentService.MatchOrder(se.lexicon.order.component.entity.OrderEntity,se.lexicon.order.component.domain.OrderBook)
	at se.lexicon.order.component.test.integration.service.OrderComponentServiceIntegrationTest.testPlaceOrder(OrderComponentServiceIntegrationTest.java:45)
</error>
  </testcase>
  <testcase name="testGetAllOrderComponent" classname="se.lexicon.order.component.test.integration.service.OrderComponentServiceIntegrationTest" time="0">
    <error message="bean=se.lexicon.order.component.service.OrderComponentService-orderComponentService beanId=1 message=Ambiguous routing. No routing argument defined in method signature or on method arguments and method not annotated with @Broadcast. serviceMethod=public abstract void se.lexicon.order.component.service.OrderComponentService.MatchOrder(se.lexicon.order.component.entity.OrderEntity,se.lexicon.order.component.domain.OrderBook)" type="com.so4it.gs.rpc.exception.IllegalServiceMetadataException">com.so4it.gs.rpc.exception.IllegalServiceMetadataException: bean=se.lexicon.order.component.service.OrderComponentService-orderComponentService beanId=1 message=Ambiguous routing. No routing argument defined in method signature or on method arguments and method not annotated with @Broadcast. serviceMethod=public abstract void se.lexicon.order.component.service.OrderComponentService.MatchOrder(se.lexicon.order.component.entity.OrderEntity,se.lexicon.order.component.domain.OrderBook)
	at se.lexicon.order.component.test.integration.service.OrderComponentServiceIntegrationTest.testGetAllOrderComponent(OrderComponentServiceIntegrationTest.java:182)
</error>
  </testcase>
  <testcase name="testGetAllOrderComponent" classname="se.lexicon.order.component.test.integration.service.OrderComponentServiceIntegrationTest" time="0">
    <error message="bean=se.lexicon.order.component.service.OrderComponentService-orderComponentService beanId=1 message=Ambiguous routing. No routing argument defined in method signature or on method arguments and method not annotated with @Broadcast. serviceMethod=public abstract void se.lexicon.order.component.service.OrderComponentService.MatchOrder(se.lexicon.order.component.entity.OrderEntity,se.lexicon.order.component.domain.OrderBook)" type="com.so4it.gs.rpc.exception.IllegalServiceMetadataException">com.so4it.gs.rpc.exception.IllegalServiceMetadataException: bean=se.lexicon.order.component.service.OrderComponentService-orderComponentService beanId=1 message=Ambiguous routing. No routing argument defined in method signature or on method arguments and method not annotated with @Broadcast. serviceMethod=public abstract void se.lexicon.order.component.service.OrderComponentService.MatchOrder(se.lexicon.order.component.entity.OrderEntity,se.lexicon.order.component.domain.OrderBook)
	at se.lexicon.order.component.test.integration.service.OrderComponentServiceIntegrationTest.testGetAllOrderComponent(OrderComponentServiceIntegrationTest.java:182)
</error>
  </testcase>
  <testcase name="testMatchOrder" classname="se.lexicon.order.component.test.integration.service.OrderComponentServiceIntegrationTest" time="0.002">
    <error message="bean=se.lexicon.order.component.service.OrderComponentService-orderComponentService beanId=1 message=Ambiguous routing. No routing argument defined in method signature or on method arguments and method not annotated with @Broadcast. serviceMethod=public abstract void se.lexicon.order.component.service.OrderComponentService.MatchOrder(se.lexicon.order.component.entity.OrderEntity,se.lexicon.order.component.domain.OrderBook)" type="com.so4it.gs.rpc.exception.IllegalServiceMetadataException">com.so4it.gs.rpc.exception.IllegalServiceMetadataException: bean=se.lexicon.order.component.service.OrderComponentService-orderComponentService beanId=1 message=Ambiguous routing. No routing argument defined in method signature or on method arguments and method not annotated with @Broadcast. serviceMethod=public abstract void se.lexicon.order.component.service.OrderComponentService.MatchOrder(se.lexicon.order.component.entity.OrderEntity,se.lexicon.order.component.domain.OrderBook)
	at se.lexicon.order.component.test.integration.service.OrderComponentServiceIntegrationTest.testMatchOrder(OrderComponentServiceIntegrationTest.java:157)
</error>
  </testcase>
  <testcase name="testMatchOrder" classname="se.lexicon.order.component.test.integration.service.OrderComponentServiceIntegrationTest" time="0.001">
    <error message="bean=se.lexicon.order.component.service.OrderComponentService-orderComponentService beanId=1 message=Ambiguous routing. No routing argument defined in method signature or on method arguments and method not annotated with @Broadcast. serviceMethod=public abstract void se.lexicon.order.component.service.OrderComponentService.MatchOrder(se.lexicon.order.component.entity.OrderEntity,se.lexicon.order.component.domain.OrderBook)" type="com.so4it.gs.rpc.exception.IllegalServiceMetadataException">com.so4it.gs.rpc.exception.IllegalServiceMetadataException: bean=se.lexicon.order.component.service.OrderComponentService-orderComponentService beanId=1 message=Ambiguous routing. No routing argument defined in method signature or on method arguments and method not annotated with @Broadcast. serviceMethod=public abstract void se.lexicon.order.component.service.OrderComponentService.MatchOrder(se.lexicon.order.component.entity.OrderEntity,se.lexicon.order.component.domain.OrderBook)
	at se.lexicon.order.component.test.integration.service.OrderComponentServiceIntegrationTest.testMatchOrder(OrderComponentServiceIntegrationTest.java:157)
</error>
  </testcase>
  <testcase name="testPlaceTwoOrders" classname="se.lexicon.order.component.test.integration.service.OrderComponentServiceIntegrationTest" time="0.001">
    <error message="bean=se.lexicon.order.component.service.OrderComponentService-orderComponentService beanId=1 message=Ambiguous routing. No routing argument defined in method signature or on method arguments and method not annotated with @Broadcast. serviceMethod=public abstract void se.lexicon.order.component.service.OrderComponentService.MatchOrder(se.lexicon.order.component.entity.OrderEntity,se.lexicon.order.component.domain.OrderBook)" type="com.so4it.gs.rpc.exception.IllegalServiceMetadataException">com.so4it.gs.rpc.exception.IllegalServiceMetadataException: bean=se.lexicon.order.component.service.OrderComponentService-orderComponentService beanId=1 message=Ambiguous routing. No routing argument defined in method signature or on method arguments and method not annotated with @Broadcast. serviceMethod=public abstract void se.lexicon.order.component.service.OrderComponentService.MatchOrder(se.lexicon.order.component.entity.OrderEntity,se.lexicon.order.component.domain.OrderBook)
	at se.lexicon.order.component.test.integration.service.OrderComponentServiceIntegrationTest.testPlaceTwoOrders(OrderComponentServiceIntegrationTest.java:60)
</error>
  </testcase>
  <testcase name="testPlaceTwoOrders" classname="se.lexicon.order.component.test.integration.service.OrderComponentServiceIntegrationTest" time="0">
    <error message="bean=se.lexicon.order.component.service.OrderComponentService-orderComponentService beanId=1 message=Ambiguous routing. No routing argument defined in method signature or on method arguments and method not annotated with @Broadcast. serviceMethod=public abstract void se.lexicon.order.component.service.OrderComponentService.MatchOrder(se.lexicon.order.component.entity.OrderEntity,se.lexicon.order.component.domain.OrderBook)" type="com.so4it.gs.rpc.exception.IllegalServiceMetadataException">com.so4it.gs.rpc.exception.IllegalServiceMetadataException: bean=se.lexicon.order.component.service.OrderComponentService-orderComponentService beanId=1 message=Ambiguous routing. No routing argument defined in method signature or on method arguments and method not annotated with @Broadcast. serviceMethod=public abstract void se.lexicon.order.component.service.OrderComponentService.MatchOrder(se.lexicon.order.component.entity.OrderEntity,se.lexicon.order.component.domain.OrderBook)
	at se.lexicon.order.component.test.integration.service.OrderComponentServiceIntegrationTest.testPlaceTwoOrders(OrderComponentServiceIntegrationTest.java:60)
</error>
  </testcase>
=======
  <testcase name="testOrderComponentServiceExists" classname="se.lexicon.order.component.test.integration.service.OrderComponentServiceIntegrationTest" time="0.038"/>
  <testcase name="testOrderComponentServiceExists" classname="se.lexicon.order.component.test.integration.service.OrderComponentServiceIntegrationTest" time="0.002"/>
  <testcase name="testPlaceOrder" classname="se.lexicon.order.component.test.integration.service.OrderComponentServiceIntegrationTest" time="0.285"/>
  <testcase name="testPlaceOrder" classname="se.lexicon.order.component.test.integration.service.OrderComponentServiceIntegrationTest" time="0.009"/>
  <testcase name="testGetAllOrderComponent" classname="se.lexicon.order.component.test.integration.service.OrderComponentServiceIntegrationTest" time="0.029"/>
  <testcase name="testGetAllOrderComponent" classname="se.lexicon.order.component.test.integration.service.OrderComponentServiceIntegrationTest" time="0.019"/>
  <testcase name="testMatchOrder" classname="se.lexicon.order.component.test.integration.service.OrderComponentServiceIntegrationTest" time="0.052"/>
  <testcase name="testMatchOrder" classname="se.lexicon.order.component.test.integration.service.OrderComponentServiceIntegrationTest" time="0.036"/>
  <testcase name="testPlaceTwoOrders" classname="se.lexicon.order.component.test.integration.service.OrderComponentServiceIntegrationTest" time="0.015"/>
  <testcase name="testPlaceTwoOrders" classname="se.lexicon.order.component.test.integration.service.OrderComponentServiceIntegrationTest" time="0.019"/>
>>>>>>> development
</testsuite>